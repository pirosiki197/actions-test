name: Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

  workflow_call:
    inputs:
      ref_name:
        description: Tag short ref name like v1.2.3
        type: string
        required: true

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        id: buildx
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            ${{ inputs.ref_name != '' && format('type=raw,value={0}', inputs.ref_name) || '' }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref_type == 'tag' || inputs.ref_name != '' }}
          sep-tags: ","

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: pirosiki197
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v6
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        with:
          push: true
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file-labels }}
            cwd://${{ steps.meta.outputs.bake-file-annotations }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  release:
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' || inputs.ref_name != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.ref_name || github.ref_name }}
          generate_release_notes: true
